"use client"

import { useState } from "react"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Alert, AlertDescription } from "@/components/ui/alert"
import { CheckCircle, Copy, ExternalLink, Settings } from "lucide-react"

export default function SetupPage() {
  const [webhookUrl, setWebhookUrl] = useState("")
  const [isSettingWebhook, setIsSettingWebhook] = useState(false)
  const [webhookResult, setWebhookResult] = useState<any>(null)

  const setupWebhook = async () => {
    setIsSettingWebhook(true)
    try {
      const response = await fetch("/api/telegram/set-webhook", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ url: webhookUrl }),
      })

      const result = await response.json()
      setWebhookResult(result)
    } catch (error) {
      setWebhookResult({ error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ webhook" })
    } finally {
      setIsSettingWebhook(false)
    }
  }

  const copyToClipboard = (text: string) => {
    navigator.clipboard.writeText(text)
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-4">
      <div className="max-w-4xl mx-auto space-y-6">
        <div className="text-center space-y-4">
          <h1 className="text-3xl font-bold text-gray-900">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –ë–æ—Ç–∞</h1>
          <p className="text-gray-600">–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞ —ç–º–æ—Ü–∏–π</p>
        </div>

        {/* –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ */}
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Settings className="w-5 h-5" />
              –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ Telegram –±–æ—Ç–∞
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="space-y-3">
              <p>
                1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –∏ –Ω–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞ <strong>@BotFather</strong>
              </p>
              <p>
                2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É <code className="bg-gray-100 px-2 py-1 rounded">/newbot</code>
              </p>
              <p>3. –í–≤–µ–¥–∏—Ç–µ –∏–º—è –¥–ª—è –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –≠–º–æ—Ü–∏–π")</p>
              <p>4. –í–≤–µ–¥–∏—Ç–µ username (–Ω–∞–ø—Ä–∏–º–µ—Ä: "emotion_analyzer_bot")</p>
              <p>5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω</p>
            </div>

            <Alert>
              <AlertDescription>
                <strong>–í–∞–∂–Ω–æ:</strong> –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ç–æ–∫–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∫–∞–∫ <code>TELEGRAM_BOT_TOKEN</code>
              </AlertDescription>
            </Alert>

            <Button onClick={() => window.open("https://t.me/BotFather", "_blank")} className="w-full">
              <ExternalLink className="w-4 h-4 mr-2" />
              –û—Ç–∫—Ä—ã—Ç—å @BotFather
            </Button>
          </CardContent>
        </Card>

        {/* –®–∞–≥ 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook */}
        <Card>
          <CardHeader>
            <CardTitle>–®–∞–≥ 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Webhook</CardTitle>
            <CardDescription>–£–∫–∞–∂–∏—Ç–µ URL –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π</CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="space-y-2">
              <label className="text-sm font-medium">URL Webhook:</label>
              <Input
                placeholder="https://your-app.vercel.app/api/telegram/webhook"
                value={webhookUrl}
                onChange={(e) => setWebhookUrl(e.target.value)}
              />
            </div>

            <Button onClick={setupWebhook} disabled={!webhookUrl || isSettingWebhook} className="w-full">
              {isSettingWebhook ? "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é..." : "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Webhook"}
            </Button>

            {webhookResult && (
              <Alert className={webhookResult.success ? "border-green-500" : "border-red-500"}>
                <AlertDescription>
                  {webhookResult.success ? (
                    <div className="flex items-center gap-2">
                      <CheckCircle className="w-4 h-4 text-green-600" />
                      Webhook —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!
                    </div>
                  ) : (
                    <div className="text-red-600">–û—à–∏–±–∫–∞: {webhookResult.error}</div>
                  )}
                </AlertDescription>
              </Alert>
            )}
          </CardContent>
        </Card>

        {/* –®–∞–≥ 3: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è */}
        <Card>
          <CardHeader>
            <CardTitle>–®–∞–≥ 3: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è</CardTitle>
            <CardDescription>–î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Vercel</CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="space-y-3">
              <div className="bg-gray-50 p-3 rounded-lg">
                <div className="flex items-center justify-between">
                  <code>TELEGRAM_BOT_TOKEN=your_bot_token_here</code>
                  <Button
                    size="sm"
                    variant="outline"
                    onClick={() => copyToClipboard("TELEGRAM_BOT_TOKEN=your_bot_token_here")}
                  >
                    <Copy className="w-4 h-4" />
                  </Button>
                </div>
              </div>
              <div className="bg-gray-50 p-3 rounded-lg">
                <div className="flex items-center justify-between">
                  <code>OPENAI_API_KEY=your_openai_key_here</code>
                  <Button
                    size="sm"
                    variant="outline"
                    onClick={() => copyToClipboard("OPENAI_API_KEY=your_openai_key_here")}
                  >
                    <Copy className="w-4 h-4" />
                  </Button>
                </div>
              </div>
            </div>

            <Alert>
              <AlertDescription>
                –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞ Vercel: Settings ‚Üí Environment Variables
              </AlertDescription>
            </Alert>
          </CardContent>
        </Card>

        {/* –®–∞–≥ 4: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ */}
        <Card>
          <CardHeader>
            <CardTitle>–®–∞–≥ 4: –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="space-y-3">
              <h4 className="font-medium">–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:</h4>
              <ul className="space-y-2 text-sm">
                <li>
                  <code>/start</code> - –∑–∞–ø—É—Å–∫ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
                </li>
                <li>
                  <code>/help</code> - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
                </li>
                <li>
                  <code>/analyze</code> - –∞–Ω–∞–ª–∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è (–æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
                </li>
              </ul>

              <h4 className="font-medium">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑:</h4>
              <p className="text-sm text-gray-600">
                –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª–∏–Ω–Ω–µ–µ 10 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –µ—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã
                –≤—ã—Ä–∞–∂–µ–Ω–Ω—ã–µ —ç–º–æ—Ü–∏–∏ –∏–ª–∏ –≤—ã—Å–æ–∫–∞—è —Ç–æ–∫—Å–∏—á–Ω–æ—Å—Ç—å.
              </p>

              <h4 className="font-medium">–ü—Ä–∏–º–µ—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</h4>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-3 text-sm">
                <div className="bg-red-50 p-2 rounded">
                  <strong>–ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ:</strong>
                  <br />
                  "–û–ø—è—Ç—å —ç—Ç–æ—Ç –¥–µ–¥–ª–∞–π–Ω! üò§"
                  <br />
                  "–ù—É –∫–æ–Ω–µ—á–Ω–æ, –≤—Å–µ –ø–æ –ø–ª–∞–Ω—É... üôÑ"
                </div>
                <div className="bg-green-50 p-2 rounded">
                  <strong>–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ:</strong>
                  <br />
                  "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üéâ"
                  <br />
                  "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ñ–∏–¥–±–µ–∫ üëç"
                </div>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  )
}
