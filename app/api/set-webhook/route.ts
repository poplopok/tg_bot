import { type NextRequest, NextResponse } from "next/server"

export async function POST(request: NextRequest) {
  try {
    const botToken = "7970844280:AAGNyTlzselT8E6XunCSqnxtvYWePd76JFk"

    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL —Å –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–º
    const host = request.headers.get("host")
    const webhookUrl = `https://${host}/api/webhook`

    console.log("üîó –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook:", webhookUrl)

    if (!botToken) {
      return NextResponse.json({ error: "Bot token not found" }, { status: 500 })
    }

    // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook
    const deleteResponse = await fetch(`https://api.telegram.org/bot${botToken}/deleteWebhook`, {
      method: "POST",
    })

    console.log("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ webhook:", await deleteResponse.text())

    // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ
    await new Promise((resolve) => setTimeout(resolve, 1000))

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º URL
    const response = await fetch(`https://api.telegram.org/bot${botToken}/setWebhook`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        url: webhookUrl, // –¢–µ–ø–µ—Ä—å —Å https://
        allowed_updates: ["message", "callback_query"],
        drop_pending_updates: true,
      }),
    })

    const data = await response.json()
    console.log("üì° –†–µ–∑—É–ª—å—Ç–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook:", data)

    if (data.ok) {
      return NextResponse.json({
        success: true,
        message: "Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ",
        webhook_url: webhookUrl,
        result: data,
      })
    } else {
      return NextResponse.json(
        {
          error: "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook",
          details: data,
        },
        { status: 500 },
      )
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook:", error)
    return NextResponse.json(
      {
        error: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
        details: error instanceof Error ? error.message : "Unknown error",
      },
      { status: 500 },
    )
  }
}

export async function GET() {
  try {
    const botToken = "7970844280:AAGNyTlzselT8E6XunCSqnxtvYWePd76JFk"

    const response = await fetch(`https://api.telegram.org/bot${botToken}/getWebhookInfo`)
    const data = await response.json()

    return NextResponse.json({
      webhook_info: data,
      status: data.result?.url ? "active" : "not_set",
    })
  } catch (error) {
    return NextResponse.json({ error: "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook" }, { status: 500 })
  }
}
